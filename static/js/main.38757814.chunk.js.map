{"version":3,"sources":["type/type.ts","store/reducer/todoReducer.ts","store/reducer/index.ts","store/store.ts","Components/Form.tsx","Components/Navbar.tsx","hooks/useTypedSelector.ts","store/action/todoItemsAction.ts","Components/TodoItem.tsx","Components/TodoList.tsx","App.tsx","index.tsx"],"names":["TodoActionTypes","initialState","items","todoReducer","state","action","type","GET_AXIOS_TODO","payload","slice","CREATE_TODO","IS_COMPLETED","DELETE_TODO","UPDATE_TODO","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Form","isDisabled","setIsDisabled","input","handleInput","pressEnter","text","updateTodo","createTodo","edit","pathname","useLocation","className","disabled","onKeyUp","onChange","e","value","placeholder","onClick","id","completed","userId","Navbar","console","log","style","color","to","useTypedSelector","useSelector","updateTodoItemAction","getTodosList","dispatch","axios","get","then","data","TodoItem","todo","deleteTodo","isCompletedTodo","editTodo","title","isCompleted","classNames","height","viewBox","width","xmlns","d","TodoList","useState","inputEdit","setInputEdit","setEdit","useDispatch","useEffect","deleteItem","filter","el","map","find","target","newTodo","i","App","inputCreate","setInputCreate","getItemFromLocalStorage","JSON","parse","localStorage","getItem","setItem","stringify","uuidv4","path","code","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38757814.chunk.js","sourcesContent":["\n\n\nexport interface ITodo{\n    userId: number\n    id: string \n    title: string\n    completed: boolean\n}\n\nexport enum TodoActionTypes {\n    GET_AXIOS_TODO = 'GET_AXIOS_TODO',\n    DELETE_TODO = 'DELETE_TODO',\n    CREATE_TODO = 'CREATE_TODO',\n    IS_COMPLETED = 'IS_COMPLETED',\n    UPDATE_TODO = 'UPDATE_TODO',\n}\n\ninterface GetAxiosTodoAction{\n    type:TodoActionTypes.GET_AXIOS_TODO\n    payload:ITodo[]\n}\n\ninterface DeleteTodoAction{\n    type:TodoActionTypes.DELETE_TODO\n    payload:ITodo[]\n}\n\ninterface CreateTodoAction{\n    type:TodoActionTypes.CREATE_TODO\n    payload:ITodo\n}\n\ninterface IsCompletedTodoAction{\n    type:TodoActionTypes.IS_COMPLETED\n    payload:ITodo[]\n}\n\ninterface UpdateTodoAction{\n    type:TodoActionTypes.UPDATE_TODO\n    payload:ITodo[]\n}\n\nexport type TodoActions = GetAxiosTodoAction | DeleteTodoAction |  CreateTodoAction |IsCompletedTodoAction|UpdateTodoAction \n\nexport interface getAxiosTodoItems{\n    config:Object\n    data:ITodo[]\n    headers:Object\n    request:any\n    status:number\n    statusText:string\n}","import { ITodo, TodoActionTypes,TodoActions } from \"../../type/type\"\r\n    \r\nexport interface ITodoState{\r\n   items:any\r\n}\r\n\r\nconst initialState={\r\n    items:[] as ITodo[]\r\n}\r\n\r\n\r\nconst todoReducer = (state = initialState,action:TodoActions):ITodoState=>{\r\n    switch(action.type){\r\n        case TodoActionTypes.GET_AXIOS_TODO:\r\n            return {\r\n                ...state,\r\n                items:action.payload.slice(0,10),\r\n                }\r\n        case TodoActionTypes.CREATE_TODO:\r\n            return{\r\n                ...state,\r\n                items:[action.payload,...state.items,]\r\n            }\r\n        case TodoActionTypes.IS_COMPLETED:\r\n            return{\r\n                ...state,\r\n                items: action.payload\r\n            }\r\n         case TodoActionTypes.DELETE_TODO:\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n            }\r\n        case TodoActionTypes.UPDATE_TODO:\r\n            return {\r\n                ...state,\r\n                items:action.payload\r\n                    }        \r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default todoReducer","import { combineReducers } from \"redux\";\r\nimport todoReducer from \"./todoReducer\";\r\n\r\nexport const rootReducer = combineReducers({todoReducer})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import {createStore,applyMiddleware} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from './reducer'\r\n\r\nconst store = createStore(rootReducer,composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import React,{FC} from 'react'\nimport { ITodo } from '../type/type'\nimport {useLocation} from 'react-router-dom'\n\ninterface IForm {\n    text?:string\n    edit?:ITodo|null|undefined\n    input:string\n    handleInput:(e:React.ChangeEvent<HTMLInputElement>)=>void\n    pressEnter?:(e:React.KeyboardEvent<HTMLInputElement>)=>void\n    updateTodo?:(title:string,id:string,completed:boolean,userId:number)=>void \n    createTodo?:()=>void\n    isDisabled?:any\n    setIsDisabled?:any\n}\n\nconst Form:FC<IForm> = ({isDisabled,setIsDisabled,input,handleInput,pressEnter,text,updateTodo,createTodo,edit}) => { \n    \n    const {pathname} = useLocation()\n\n\n    const click = () => {\n        if(edit){\n            updateTodo!(input,edit.id,edit.completed,edit.userId)\n            setIsDisabled(true)\n        } else {\n            createTodo!()\n        }\n    }\n\n\n    return (\n        <div className='container_form'>\n            <input disabled={isDisabled}  className='container_form_input'  onKeyUp={pressEnter} onChange={(e)=>handleInput(e)} type=\"text\" value={input} placeholder='write todo...'/>\n            <button disabled={isDisabled} className={pathname === '/createTodo' ?'container_form_create' :'container_form_button'} onClick={click} >{text}</button>\n        </div>\n    )\n}\n\nexport default Form\n","import React from 'react'\r\nimport { Link,useLocation } from 'react-router-dom'\r\n\r\nconst Navbar:React.FC = () => {\r\n\r\nconst {pathname} = useLocation()\r\nconsole.log(pathname)\r\n\r\n    return (\r\n        <nav className='navbar_container'>\r\n            <Link style={{color:pathname=== '/createTodo' ?'#e1b382' :''}} to='/createTodo'>Create ToDo </Link>\r\n            <span>/</span>\r\n            <Link style={{color:pathname === '/createTodo' ?'' :'#e1b382'}} to='/todoList'>ToDo List</Link>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store/reducer\";\r\n\r\n\r\nexport const useTypedSelector:TypedUseSelectorHook<RootState> = useSelector\r\n","import axios from \"axios\"\r\nimport { Dispatch } from \"redux\"\r\nimport { getAxiosTodoItems, ITodo, TodoActions, TodoActionTypes } from \"../../type/type\"\r\n\r\n\r\n \r\n \r\n export const getTodoItemsAction = (payload:any)=>{\r\n    return {\r\n        type:TodoActionTypes.GET_AXIOS_TODO,\r\n        payload,\r\n    }\r\n}\r\n\r\nexport const setTodoItemsAction = (payload:ITodo)=>{\r\n    return {\r\n        type:TodoActionTypes.CREATE_TODO,\r\n        payload,\r\n    }\r\n}\r\n\r\nexport const deleteTodoItemAction = (payload:any)=>{\r\n    return {\r\n        type:TodoActionTypes.DELETE_TODO,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const isCompletedTodoItemAction = (payload:any)=>{\r\n    return {\r\n        type:TodoActionTypes.IS_COMPLETED,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const updateTodoItemAction = (payload:any)=>{\r\n    return {\r\n        type:TodoActionTypes.UPDATE_TODO,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nexport  const getTodosList = () => (dispatch:Dispatch<TodoActions>) => {\r\n    axios.get<getAxiosTodoItems>('https://jsonplaceholder.typicode.com/todos').then(\r\n      ({data})=> {dispatch(getTodoItemsAction(data))}\r\n    )\r\n  }\r\n\r\n","import React,{FC} from 'react'\nimport {ITodo} from '../type/type'\nimport classNames from 'classnames'\n\ninterface ITodoItemProps{\n    todo:ITodo;\n    deleteTodo:(id:string)=>void;\n    isCompletedTodo:(id:string)=>void;\n    editTodo:(id:string)=>void\n}\n\n\nconst TodoItem:FC<ITodoItemProps> = ({ todo,deleteTodo,isCompletedTodo,editTodo}) => {\n\n    const {title,id,completed,} = todo\n\n    const isCompleted = classNames({\n        'container_todoItem_title':!completed,\n        'container_todoItem_title_completed':completed\n    })\n    \n    \n    return (\n        <div className='container_todoItem'>\n            <div className={isCompleted}>{title}</div>\n            <div className='container_todoItem_svg'>\n                <span className='completed' onClick={()=>isCompletedTodo(id)}><svg id=\"Bold\" enable-background=\"new 0 0 24 24\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m.828 13.336c-.261.304-.388.691-.357 1.091s.215.764.52 1.024l7.403 6.346c.275.235.616.361.974.361.044 0 .089-.002.134-.006.405-.036.77-.229 1.028-.542l12.662-15.411c.254-.31.373-.7.334-1.099-.04-.399-.231-.759-.541-1.014l-2.318-1.904c-.639-.524-1.585-.432-2.111.207l-9.745 11.861-3.916-3.355c-.628-.536-1.576-.465-2.115.163z\"/></svg></span>\n                <span className='edit' onClick={()=>editTodo(id)}><svg id=\"_x31_\" enable-background=\"new 0 0 24 24\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m11.894 24c-.131 0-.259-.052-.354-.146-.118-.118-.17-.288-.137-.451l.707-3.535c.02-.098.066-.187.137-.256l7.778-7.778c.584-.584 1.537-.584 2.121 0l1.414 1.414c.585.585.585 1.536 0 2.121l-7.778 7.778c-.069.07-.158.117-.256.137l-3.535.707c-.032.006-.065.009-.097.009zm1.168-3.789-.53 2.651 2.651-.53 7.671-7.671c.195-.195.195-.512 0-.707l-1.414-1.414c-.195-.195-.512-.195-.707 0zm2.367 2.582h.01z\"/><path d=\"m9.5 21h-7c-1.379 0-2.5-1.121-2.5-2.5v-13c0-1.379 1.121-2.5 2.5-2.5h2c.276 0 .5.224.5.5s-.224.5-.5.5h-2c-.827 0-1.5.673-1.5 1.5v13c0 .827.673 1.5 1.5 1.5h7c.276 0 .5.224.5.5s-.224.5-.5.5z\"/><path d=\"m16.5 12c-.276 0-.5-.224-.5-.5v-6c0-.827-.673-1.5-1.5-1.5h-2c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h2c1.379 0 2.5 1.121 2.5 2.5v6c0 .276-.224.5-.5.5z\"/><path d=\"m11.5 6h-6c-.827 0-1.5-.673-1.5-1.5v-2c0-.276.224-.5.5-.5h1.55c.232-1.14 1.243-2 2.45-2s2.218.86 2.45 2h1.55c.276 0 .5.224.5.5v2c0 .827-.673 1.5-1.5 1.5zm-6.5-3v1.5c0 .275.225.5.5.5h6c.275 0 .5-.225.5-.5v-1.5h-1.5c-.276 0-.5-.224-.5-.5 0-.827-.673-1.5-1.5-1.5s-1.5.673-1.5 1.5c0 .276-.224.5-.5.5z\"/><path d=\"m13.5 9h-10c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h10c.276 0 .5.224.5.5s-.224.5-.5.5z\"/><path d=\"m13.5 12h-10c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h10c.276 0 .5.224.5.5s-.224.5-.5.5z\"/><path d=\"m13.5 15h-10c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h10c.276 0 .5.224.5.5s-.224.5-.5.5z\"/></svg></span>\n                <span className='delete' onClick={()=>deleteTodo(id)} ><svg id=\"Layer_1\" enable-background=\"new 0 0 512 512\" height=\"24\" viewBox=\"0 0 512 512\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m424 64h-88v-16c0-26.51-21.49-48-48-48h-64c-26.51 0-48 21.49-48 48v16h-88c-22.091 0-40 17.909-40 40v32c0 8.837 7.163 16 16 16h384c8.837 0 16-7.163 16-16v-32c0-22.091-17.909-40-40-40zm-216-16c0-8.82 7.18-16 16-16h64c8.82 0 16 7.18 16 16v16h-96z\"/><path d=\"m78.364 184c-2.855 0-5.13 2.386-4.994 5.238l13.2 277.042c1.22 25.64 22.28 45.72 47.94 45.72h242.98c25.66 0 46.72-20.08 47.94-45.72l13.2-277.042c.136-2.852-2.139-5.238-4.994-5.238zm241.636 40c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16zm-80 0c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16zm-80 0c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16z\"/></g></svg></span>\n            </div>\n        </div>\n    )\n}\n\nexport default TodoItem\n","import React, { FC,useState,useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useTypedSelector } from '../hooks/useTypedSelector'\r\nimport { deleteTodoItemAction, isCompletedTodoItemAction, updateTodoItemAction } from '../store/action/todoItemsAction'\r\nimport { ITodo } from '../type/type'\r\nimport Form from './Form'\r\nimport TodoItem from './TodoItem'\r\n\r\n\r\n\r\nconst TodoList:FC = () => {\r\n\r\n    const [inputEdit,setInputEdit] = useState<any>()\r\n    const [edit,setEdit] = useState<ITodo | null>()\r\n    const [isDisabled,setIsDisabled] = useState<boolean>(true)\r\n    const {items} = useTypedSelector((state)=>state.todoReducer)\r\n    const dispatch = useDispatch()\r\n    console.log(edit)\r\n    \r\n    useEffect(() => {\r\n        if(edit){\r\n            setInputEdit(edit.title)\r\n         }else{\r\n            setInputEdit('')\r\n        }\r\n        }, [edit])\r\n\r\n\r\n    const handleInputEdit =(e:React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputEdit(e.target.value)\r\n    }\r\n\r\n    const deleteTodo = (id:string)=> {\r\n        const deleteItem = items.filter(el=> el.id !== id)\r\n        dispatch(deleteTodoItemAction(deleteItem))\r\n     }\r\n  \r\n     const isCompletedTodo = (id:string) => {\r\n      const isCompleted =  items.map(todo=> {\r\n         if(todo.id === id){\r\n           todo.completed = !todo.completed;\r\n         }\r\n       return todo })\r\n\r\n         dispatch(isCompletedTodoItemAction(isCompleted))\r\n              \r\n     }\r\n    \r\n     const editTodo = (id:string) => {\r\n       setEdit(items.find(todo => todo.id === id))\r\n       setIsDisabled(false)\r\n     }\r\n  \r\n     const updateTodo = (title:string,id:string,completed:boolean,userId:number)=>{\r\n      const newTodo:any = items.map(todo=>\r\n        todo.id === id ?{title,id,completed,userId} :todo)\r\n        dispatch(updateTodoItemAction(newTodo));\r\n        setEdit(null)\r\n     }\r\n  \r\n    \r\n    \r\n    return (\r\n    <>\r\n    <h1>ToDo...</h1>\r\n    <div className=\"App\">\r\n      <Form \r\n        text={'Edit'}\r\n        input={inputEdit} \r\n        edit={edit} \r\n        handleInput={handleInputEdit} \r\n        updateTodo={updateTodo}\r\n        isDisabled={isDisabled}\r\n        setIsDisabled={setIsDisabled}\r\n         />\r\n      <div className='todos_container'>\r\n        {items && items.map((el,i) => <TodoItem todo={el} deleteTodo={deleteTodo} isCompletedTodo={isCompletedTodo} editTodo={editTodo} />)}\r\n      </div>\r\n     </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React,{FC,useState,useEffect} from 'react';\nimport  {Route,Switch,Redirect} from 'react-router-dom'\nimport Form from './Components/Form'\nimport Navbar from './Components/Navbar'\nimport {v4 as uuidv4} from 'uuid'\nimport './libs/App.scss'\nimport TodoList from './Components/TodoList';\nimport { useDispatch} from 'react-redux';\nimport { getTodosList, setTodoItemsAction, updateTodoItemAction } from './store/action/todoItemsAction';\nimport { useTypedSelector } from './hooks/useTypedSelector';\n\n\nconst App:FC = () => {\n  const [inputCreate,setInputCreate]  = useState<string>('');\n  const {items} = useTypedSelector((state)=>state.todoReducer)\n  const getItemFromLocalStorage = JSON.parse(localStorage.getItem('items') as string) \n\n  const dispatch = useDispatch()\n\n\nuseEffect(()=> {\n  if(getItemFromLocalStorage){\n    dispatch(updateTodoItemAction(getItemFromLocalStorage))\n  }else{\n    dispatch(getTodosList());\n  }   \n  }\n  ,[])\n\nuseEffect(()=>{\n  localStorage.setItem('items',JSON.stringify(items))\n},[items])\n\n\n  const handleInput = (e:React.ChangeEvent<HTMLInputElement>)=>{\n    setInputCreate(e.target.value)\n  }\n\n  const newTodo = () => {\n      dispatch(setTodoItemsAction({title:inputCreate,userId:10,id:uuidv4(),completed:false}))\n      setInputCreate('')\n\n        if(inputCreate === ''){\n          dispatch(updateTodoItemAction(items))\n        }\n    \n  }\n\n  const pressEnter = (e:React.KeyboardEvent)=>{\n    if(e.code === \"Enter\"){\n        newTodo()\n    }\n   }\n\n   \n   \n  return (\n  <>\n    <Navbar/>\n    <Switch>\n      <Route path='/createTodo'>\n       <Form text={'Add'} input={inputCreate} handleInput={handleInput} pressEnter={pressEnter} createTodo={newTodo}/>\n      </Route>\n      <Route path='/todoList'>\n        <TodoList/>\n      </Route>\n      <Redirect to='/todoList'/>\n    </Switch>\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport store from './store/store';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}